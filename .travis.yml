sudo: false

language:
    - c++

os: 
  - windows

# Install packages
before_install:
#window packages
  - choco install doxygen.install;
  - choco install graphviz;
  - choco install unzip;
  - choco install LLVM;
  - dir /C/Users/travis/AppData/Local/Temp/chocolatey/llvm/10.0.0
#  - nuget install MyPackage -Source %cd% -OutputDirectory packages	 
  - wget --no-check-certificate https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.7z;
  - 7z x boost_1_68_0.7z -o/C/local;
  - cd "/C/local/boost_1_68_0";
  - ./bootstrap.bat;
  - ./b2.exe --with-filesystem --with-system;
  - cd ${TRAVIS_BUILD_DIR};
  - dir /C/ProgramData/chocolatey;
#making directory to store installed dependencies: cmake, toolchain, JIT
  - mkdir -p ${TRAVIS_BUILD_DIR}/deps
  - Dep_dir="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${Dep_dir}/cmake #directory for Cmake version 3.16.2
  - mkdir -p ${Dep_dir}/toolchain #directly for Riscv64 toolchain
  - mkdir -p ${Dep_dir}/JIT #directory for LLVM
#Wget all dependencies
  #Install , extract cmake to directory
  - wget https://cmake.org/files/v3.16/cmake-3.16.2-win32-x86.zip > /dev/null
  - Cmake_version16="cmake-3.16.2-win32-x86"
  - unzip ${Cmake_version16}.zip -d ${Dep_dir}/cmake > /dev/null
  - PATH=${Dep_dir}/cmake/${Cmake_version16}:${Dep_dir}/cmake/${Cmake_version16}/bin:$PATH
  - wget https://sourceforge.net/projects/gnuwin32/files/make/3.81/make-3.81-bin.zip
  - make_bin="make-3.81-bin"
  - unzip ${make_bin}.zip -d ${Dep_dir}/gmake
  - wget https://sourceforge.net/projects/gnuwin32/files/make/3.81/make-3.81-dep.zip
  - make_dep="make-3.81-dep";
  - unzip ${make_dep}.zip -d ${Dep_dir}/gmake
  #Install, extract Riscv64 to directory 
  - wget --no-check-certificate https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86_64-w64-mingw32.zip > /dev/null
  - RISC_V64="riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86_64-w64-mingw32"
  - unzip ${RISC_V64}.zip -d ${Dep_dir}/toolchain
  #Install, extract llvm(not working yet) 
  
# Build and install ETISS 
install:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build_dir && cd build_dir
  - cmake -A x64 -DBoost_USE_STATIC_LIBS=ON -DLLVM_DIR="/C/Users/travis/AppData/Local/Temp/chocolatey/llvm/10.0.0/LLVM-10.0.0-win64.exe" -DCMAKE_BUILD_TYPE=Release -DETISS_BUILD_MANUAL_DOC=ON -DCMAKE_INSTALL_PREFIX:PATH=`pwd`/installed ..
  - cmake --build . --config release
  - cmake --build . --target doc
  - cmake --build . --target install

before_script:
  - cd ${TRAVIS_BUILD_DIR}/build_dir/installed/examples/SW/riscv
  - mkdir build && cd build
  - cmake -G "Unix Makefiles" -DCMAKE_MAKE_PROGRAM=${Dep_dir}/gmake/bin/make.exe -DRISCV_ELF_GCC_PREFIX="${Dep_dir}/toolchain/${RISC_V64}" -DRISCV_ELF_GCC_BASENAME="riscv64-unknown-elf" ..
  - cmake --build .

Script: 
  - cd ${TRAVIS_BUILD_DIR}/build_dir/installed/examples/bare_etiss_processor
  - mkdir build && cd build
  - cmake cmake -A x64 -DBoost_USE_STATIC_LIBS=ON ..
  - cmake --build .
  - cd ..
  - PATH=${TRAVIS_BUILD_DIR}/build_dir/installed/lib:$PATH
  - ./run_helper.sh ${TRAVIS_BUILD_DIR}/build_dir/installed/examples/SW/riscv/build/riscv_example 

 
   
 
# Generate and deploy documentation
deploy:
  provider: pages
  skip_cleanup: true
  local_dir: build_dir/doc/html
  github_token: $GH_REPO_TOKEN
  on:
    branch: master
